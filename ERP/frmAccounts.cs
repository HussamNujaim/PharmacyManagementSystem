using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Text;
using System.Linq;
using System.Threading.Tasks;
using System.Windows.Forms;
using DevExpress.XtraEditors;
using System.Data.SqlClient;
using System.Configuration;

namespace ERP
{
    public partial class frmAccounts : DevExpress.XtraEditors.XtraForm
    {
        Presentation.CLS_Accounts acc = new Presentation.CLS_Accounts();
        public frmAccounts()
        {
            InitializeComponent();
            // This line of code is generated by Data Source Configuration Wizard
            // Fill a SqlDataSource
            sqlDataSource1.Fill();
        }

        private void groupControl1_Paint(object sender, PaintEventArgs e)
        {

        }

        private void txtEditID_EditValueChanged(object sender, EventArgs e)
        {

        }

        private void frmAccounts_Load(object sender, EventArgs e)
        {
            // TODO: This line of code loads data into the 'GetCurrencies.Get_PrimaryAccounts' table. You can move, or remove it, as needed.
            this.get_PrimaryAccountsTableAdapter.Fill(this.GetCurrencies.Get_PrimaryAccounts);
            // TODO: This line of code loads data into the 'storesDataSet.Get_Currencies' table. You can move, or remove it, as needed.
            this.get_CurrenciesTableAdapter.Fill(this.GetCurrencies.Get_Currencies);
            // TODO: This line of code loads data into the 'storesDataSet_1.Get_PrimaryAccounts' table. You can move, or remove it, as needed.
           // this.get_PrimaryAccountsTableAdapter.Fill(this.GetPrimaryAccounts.Get_PrimaryAccounts);

        }

        private void txtSearch_EditValueChanged(object sender, EventArgs e)
        {
            string txt = "";
            try
            {
                txt = cmbSearchPrimaryAcc.EditValue.ToString();
            }
            catch { }
            try
            {
                if (cmbSearchPrimaryAcc.EditValue != null)
                {
                    dgv.DataSource = null;
                    dgv.DataSource = acc.Search_SecondaryAccounts(txt, txtSearch.Text);
                }
            }
            catch { }
        }

        private void btnAdd_Click(object sender, EventArgs e)
        {
            decimal dain = 0;
            decimal madin = 0;

            if (txtAddAccName.Text != "" && cmbAddPrimaryAccount.EditValue != null)
            {
                if (txtAddDebit.Text != "")
                {
                    dain = decimal.Parse(txtAddDebit.Text);
                }
                if (txtAddCredit.Text != "")
                {
                    madin = decimal.Parse(txtAddCredit.Text);
                }
                // id func
                string maxId = acc.Get_Max_sAccountId(cmbAddPrimaryAccount.EditValue.ToString());
                if (maxId != "0")
                {
                    maxId = maxId.Remove(0, 3);
                    maxId = (int.Parse(maxId) + 1).ToString();
                }
                int prefixtId = 100 + int.Parse(cmbAddPrimaryAccount.EditValue.ToString());
                string AccountId = prefixtId + maxId;
                //
                SqlConnection con = new SqlConnection();
                con.ConnectionString = ConfigurationManager.ConnectionStrings["ERP.Properties.Settings.ERP"].ConnectionString;
                if (con.State != ConnectionState.Open)
                {
                    con.Open();
                }
                SqlTransaction transaction = con.BeginTransaction();
                try
                {

                    DataLayer.DataLayer DAL = new DataLayer.DataLayer(transaction, con);
                    acc.Add_SecondaryAccount(AccountId, cmbAddPrimaryAccount.EditValue.ToString(), txtAddAccName.Text, dain, madin, txtAddAccDetails.Text, int.Parse(cmbAddCurrency.EditValue.ToString()), DAL);
                    acc.Add_AccountsReport(AccountId, "رصيد افتتاحي", 0, DateTime.Now.Date.ToShortDateString(), "رصيد افتتاحي", dain, madin, madin - dain, DAL);
                    transaction.Commit(); con.Close();
                }
                catch (Exception ex)
                {
                    transaction.Rollback();
                    MessageBox.Show("عذراً .. فشلت العملية \n " + ex.Message, "المجموعة الرقمية للنظم والتقنية", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
                //

                txtAddAccDetails.Text = "";
                txtAddAccName.Text = "";
                txtAddCredit.Text = "";
                txtAddDebit.Text = "";
                dgv.DataSource = null;
                if (cmbAddPrimaryAccount.ItemIndex == cmbSearchPrimaryAcc.ItemIndex)
                    dgv.DataSource = acc.Get_SecondaryAccounts(cmbSearchPrimaryAcc.EditValue.ToString());
                else
                    cmbSearchPrimaryAcc.ItemIndex = cmbAddPrimaryAccount.ItemIndex;
                //   cmbPrimaryAccount.SelectedItem = null;

            }
        }

        private void cmbSearchPrimaryAcc_ListChanged(object sender, ListChangedEventArgs e)
        {
          
        }

        private void cmbSearchPrimaryAcc_Properties_EditValueChanged(object sender, EventArgs e)
        {
            string txt = "";
            try
            {
                txt = cmbSearchPrimaryAcc.EditValue.ToString();
            }
            catch { }
            try
            {
                if (cmbSearchPrimaryAcc.EditValue != null)
                {
                    dgv.DataSource = null;
                    dgv.DataSource = acc.Search_SecondaryAccounts(txt, txtSearch.Text);
                }
            }
            catch { }
        }
    }
}